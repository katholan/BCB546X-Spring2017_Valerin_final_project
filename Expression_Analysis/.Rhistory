m <- lm(Speed ~ Track + Starters, data = Sleuth3::ex0920)
drop1(m, test="F")
m <- lm(Ingestion ~ Weight + Organic, data = Sleuth3::ex0921)
drop1(m, test='F')
m <- lm(Ingestion ~ Weight + Organic, data = Sleuth3::ex0921)
summary(m)
drop1(m, test='F')
anova(m0, mW)
m0 <- lm(Ingestion ~ 1, data = ex0921)
mW <- lm(Ingestion ~ Weight, data = ex0921)
mWO <- lm(Ingestion ~ Weight + Organdic, data = ex0921)
mWO <- lm(Ingestion ~ Weight + Organic, data = ex0921)
anova(m0, mW)
anova(m0, mWO)
mO <- lm(Ingestion ~ Organic, data = ex0921)
mOW <- lm(Ingestion ~ Organic + Weight, data = ex0921)
anova(mOW)
drop1(m, test='F')
?ex0921
library(Sleuth3)
View(case0901)
m_case0901 <- lm(Flowers ~ Time + Intensity, data = case0901)
predict(m_case0901, newdata = data.frame(Intensity=150, Time=2), interval="confidence")
summary(m_case0901)
confint(m_case0901)
m_pe <- -0.040471
m_left_ci <- -0.05114478
m_right_ci <- -0.02979808
inc_by_150 <- c((150 * m_early_pe), (150 * m_early_left_ci), (150 * m_early_right_ci))
inc_by_150 <- c((150 * m_pe), (150 * m_left_ci), (150 * m_right_ci))
inc_by_150
m_case0901 <- lm(Flowers ~ Time + Intensity, data = case0901)
predict(m_case0901, newdata = data.frame(Intensity=150, Time=2), interval="confidence")
case0901_early <- case0901[case0901$Time == 2,]
case0901_early
m_early <- lm(Flowers ~ Intensity, data = case0901_early)
summary(m_early)
confint(m_early)
m_early_pe <- -0.039867
m_early_left_ci <- -0.05500391
m_early_right_ci <- -0.02472942
inc_by_150 <- c((150 * m_early_pe), (150 * m_early_left_ci), (150 * m_early_right_ci))
inc_by_150
summary(m_case0901)
confint(m_case0901)
View(case0902)
m_case0902 <- lm(log(Brain) ~ log(Body) + log(Gestation) + Litter, data = case0902)
summary(m_case0902)
predict(m_case0902, newdata = data.frame(Species = "Human being", Body = log(65), Gestation = log(270), Litter = 1.0), interval = "confidence")
log(1300)
predict(m_case0902, newdata = data.frame(Body = log(65), Gestation = log(270), Litter = 1.0), interval = "confidence")
m_case0901 <- lm(Flowers ~ Time*Intensity, data = case0901)
summary(m_case0901)
predict(m_case0901, newdata = data.frame(Intensity=150, Time=2), interval="confidence")
case0901_early <- case0901[case0901$Time == 2,]
case0901_early
m_early <- lm(Flowers ~ Intensity, data = case0901_early)
summary(m_early)
confint(m_early)
m_early <- lm(Flowers ~ Time*Intensity, data = case0901_early)
summary(m_early)
confint(m_early)
library(dplyr)
predict(m_case0902, newdata = data.frame(Species = "Human being",
Body = log(65),
Gestation = log(270),
Litter = 1.0),
interval = "confidence") %>% exp
log(1300)
predict(m_case0902, newdata = data.frame(Body = log(65),
Gestation = log(270),
Litter = 1.0),
interval = "confidence") %>% exp
predict(m_case0902, newdata = data.frame(Species = "Human being",
Body = log(65),
Gestation = log(270),
Litter = 1.0),
interval = "confidence") %>% exp
predict(m_case0902, newdata = data.frame(Body = log(65),
Gestation = log(270),
Litter = 1.0),
interval = "confidence") #%>% exp
predict(m_case0902, newdata = data.frame(Body = log(65),
Gestation = log(270),
Litter = 1.0),
interval = "confidence") %>% exp
log(9.89)
10^coef(m_case0902)[2]
10^confint(m[2,])
10^confint(m_case0902[2,])
10^coef(m_case0902)[2]
10^confint(m_case0902[2,])
10^confint(m_case0902[2])
10^confint(m_case0902)[2,]
summary(m_case0902)
2*coef(m_case0902)[3]
2*confint(m_case0902)[3,]
1+coef(m_case0902)[4]
1+confint(m_case0902)[4,]
m_case0902 <- lm(log(Brain) ~ log(Body) + log(Gestation) + Litter + log(Body)*log(Gestation), data = case0902)
summary(m_case0902)
predict(m_case0902, newdata = data.frame(Body = log(65),
Gestation = log(270),
Litter = 1.0),
interval = "confidence") %>% exp
m_case0902 <- lm(log(Brain) ~ log(Body) + log(Gestation == 280) + Litter + log(Body)*log(Gestation == 280), data = case0902)
m_case0902_280 <- m_case0902[m_case0902$Gestation == 280,]
predict(m_case0902, newdata = data.frame(Gestation = log(270), interval = "confidence") %>% exp
10^coef(m_case0902)[2]
10^confint(m_case0902)[2,]
predict(m_case0902, newdata = data.frame(Gestation = log(280), interval = "confidence") %>% exp
10^coef(m_case0902)[2]
10^confint(m_case0902)[2,]
predict(m_case0902, newdata = data.frame(Gestation = log(280), interval = "confidence") %>% exp
10^coef(m_case0902)[2]
10^confint(m_case0902)[2,]
predict(m_case0902, newdata = data.frame(Gestation = log(280), interval = "confidence") %>% exp)
10^coef(m_case0902$Gestation == 280)[2]
case0902_ges <- case0902[case0902$Gestation == 280,]
m_case0902_ges <- lm(log(Brain) ~ log(Body) + log(Gestation) + Litter + log(Body)*log(Gestation), data = case0902_ges)
summary(m_case0902_ges)
m_case0902_ges <- lm(log(Brain) ~ log(Body) + Litter, data = case0902_ges)
summary(m_case0902_ges)
10^coef(m_case0902)[2]
10^confint(m_case0902)[2,]
10^coef(m_case0902_ges)[2]
10^confint(m_case0902_ges)[2,]
View(case0902_ges)
m_case0902 <- lm(log(Brain) ~ log(Body) + log(Gestation) + Litter + log(Body)*log(Gestation), data = case0902)
summary(m_case0902)
predict(m_case0902, newdata = data.frame(Body = log(65),
Gestation = log(270),
Litter = 1.0),
interval = "confidence") %>% exp
case0902_ges <- case0902[case0902$Gestation == 280,]
ges <- rnorm(case0901_150)
ges <- rnorm(case0902_ges)
ges
ges <- rnorm(100, case0902_ges)
case0901_early <- case0901[case0901$Time == 2,]
case0901_early
m_early <- lm(Flowers ~ Time*Intensity, data = case0901_early)
summary(m_early)
case0902_ges <- case0902[case0902$Gestation == 280,]
m_case0902_ges <- lm(log(Brain) ~ log(Body) + log(Gestation) + Litter + log(Body)*log(Gestation), data = case0902_ges)
m_case902_ges
m_case0902_ges
10^coef(m_case0902_ges)[2]
install.packages(STRIPSyield)
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::intall_github("ISU-STRIPSyield")
devtools::install_github("ISU-STRIPSyield")
devtools::install_github("ISU-STRIPS/STRIPSyield")
devtools::install_github("ISU-STRIPS/STRIPSMeta")
library("dplyr")
yield <- STRIPSyield::yield %>%
filter(year == 2014) %>%
left_join(STRIPSMeta::watersheds, by="watershed") %>%
select(dryyield_buac, site, treatment)
View(yield)
m_yield <- lm(dryyield_buac ~ site * treatment, data = yield)
summary(m_yield)
View(yield)
m_yield <- lm(dryyield_buac ~ site + treatment, data = yield)
summary(m_yield)
View(yield)
m_case0902 <- lm(log(Brain) ~ log(Body) + logI(Gestation == 280) + Litter + log(Body)*logI(Gestation == 280), data = case0902)
library(Sleuth3)
m_case0902 <- lm(log(Brain) ~ log(Body) + logI(Gestation == 280) + Litter + log(Body)*logI(Gestation == 280), data = case0902)
m_case0902 <- lm(log(Brain) ~ log(Body) + log(I(Gestation == 280)) + Litter + log(Body)*log(I(Gestation == 280)), data = case0902)
summary(m_case0902)
m_case0902_ges <- lm(log(Brain) ~ log(Body) + log(Gestation) + Litter + log(Body)*log(Gestation), case0902, subset = Gestation == 280) %>% confint() %>% exp()
m_case0902_ges
10^coef(m_case0902_ges)[2]
m_case0902_ges <- lm(log(Brain) ~ log(Body) + log(Gestation) + Litter + log(Body)*log(Gestation), case0902, subset = Body == 70) %>% confint() %>% exp()
m_case0902_ges
m_case0902 <- lm(log(Brain) ~ log(Body) + log(Gestation) + Litter + log(Body)*log(Gestation), case0902)
summary(m_case0902)
predict(m_case0902, newdata = data.frame(Body = log(65),
Gestation = log(270),
Litter = 1.0),
interval = "confidence") %>% exp
1+coef(m_case0902)[4]
1+confint(m_case0902)[4,]
m_case0902_body <- lm(log(Brain) ~ log(Body) + log(Gestation) + Litter + log(Body)*log(Gestation), case0902, subset = Body == 70) %>% confint() %>% exp()
m_case0902_ges
m_case0902_ges <- lm(log(Brain) ~ log(Body) + log(Gestation/280) + Litter + log(Body)*log(Gestation/280), data = case0902_ges)
m_case0902_ges
summary(m_case0902_ges)
10^coef(m_case0902_ges)[2]
10^confint(m_case0902_ges)[2,]
m_case0902_body <- lm(log(Brain) ~ log(Body/70) + log(Gestation) + Litter + log(Body/70)*log(Gestation), case0902, subset = Body == 70) %>% confint() %>% exp()
m_case0902_ges
m_case0902_ges <- lm(log(Brain) ~ log(Body) + log(280/Gestation) + Litter + log(Body)*log(280/Gestation), data = case0902_ges)
summary(m_case0902_ges)
10^coef(m_case0902_ges)[2]
10^confint(m_case0902_ges)[2,]
ges <- case0902[case0902$Gestation == 280,]
x <- rnorm(ges)
x
x <- rnorm(100, ges)
View(ges)
m_case0902_ges <- lm(log(Brain) ~ log(Body) + log(280/Gestation) + Litter + log(Body)*log(280/Gestation), data = case0902)
summary(m_case0902_ges)
m_case0902_ges <- lm(log(Brain) ~ log(Body) + log(280/Gestation) + Litter + log(Body)*log(280/Gestation), data = case0902)%>% confint() %>% exp()
mcase0902_ges
m_case0902_ges
m_case0902_ges <- lm(log(Brain) ~ log(Body) + log(280/Gestation) + Litter + log(Body)*log(280/Gestation), data = case0902)
10^coef(m_case0902_ges)[2]
10^confint(m_case0902_ges)[2,]
m_case0902_body <- lm(log(Brain) ~ log(Body/70) + log(Gestation) + Litter + log(Body/70)*log(Gestation), case0902)
m_case0902_body <- lm(log(Brain) ~ log(Body/70) + log(Gestation) + Litter + log(Body/70)*log(Gestation), case0902)
2*coef(m_case0902_body)[3]
2*confint(m_case0902_body)[3,]
install.packages(lsmeans)
install.packages("lsmeans")
library("dplyr")
library("ggplot2")
library("Sleuth3")
library("lsmeans")
ggplot(lsmeans::fiber, aes(machine, strength)) +
geom_point() +
theme_bw()
m <- lm(strength ~ machine, data = lsmeans::fiber)
summary(m)
nd <- data.frame(machine = c("A","B","C"))
p <- predict(m,
newdata = nd,
interval = "confidence")
bind_cols(nd, p %>% as.data.frame)
ex0518 <- Sleuth3::ex0518 %>%
mutate(Treatment = relevel(Treatment, ref="Control"))
lsmeans(m, ~machine)
ex0518 <- Sleuth3::ex0518 %>%
mutate(Treatment = relevel(Treatment, ref="Control"))
ggplot(ex0518, aes(Treatment, Protein)) +
geom_point() +
theme_bw()
View(ex0518)
m <- lm(Protein ~ Treatment, data = ex0518)
lsmeans(m, ~Protein)
lsmeans(m, ~Treatment)
lsmeans(m, ~ Treatment)
m <- lm(strength ~ machine, data = lsmeans::fiber)
ls <- lsmeans(m, ~ machine)
(co <- contrast(ls, method = "pairwise"))
confint(co)
(co <- contrast(ls, method = "pairwise", adjust="none"))
confint(co)
(co <- contrast(ls, method = "trt.vs.ctrlk"))
confint(co)
?contrast
ex0518 <- Sleuth3::ex0518 %>%
mutate(Treatment = relevel(Treatment, ref="Control"))
m <- lm(Protein ~ Treatment, data = ex0518)
ls <- lsmeans(m, ~ Treatment)
(co <- contrast(ls, method = "trt.vs.ctrlk"))
confint(co)
co <- contrast(ls)
confint(co)
ls("package:lsmeans", pat=".lsmc")
(co <- contrast(ls, method = "trt.vs.ctrl"))
ex0518 <- Sleuth3::ex0518 %>%
mutate(Treatment = relevel(Treatment, ref="Control"))
m <- lm(Protein ~ Treatment, data = ex0518)
ls <- lsmeans(m, ~ Treatment)
(co <- contrast(ls, method = "trt.vs.ctrlk"))
confint(co)
(co <- contrast(ls, method = "trt.vs.ctrl"))
ls <- lsmeans(m, ~ Treatment)
(co <- contrast(ls, method = "trt.vs.ctrl"))
confint(co)
ex0518
wood_glue <- data.frame(force = c(185,170,210,240,245,190,210,250,
290,280,260,270,200,280,350,350),
wood = rep(c("spruce","maple"),each = 8),
glue = rep(c("carpenter's", "weldbond","gorilla","titebond"), each=2, times=2))
ggplot(wood_glue, aes(wood, force, color=glue, shape=glue)) +
geom_point() +
theme_bw()
m <- lm(force ~ wood*glue, data = wood_glue)
anova(m)
(ls <- lsmeans(m, ~ glue))
summary(m)
View(wood_glue)
(ls <- lsmeans(m, ~ glue))
(co <- contrast(ls, "pairwise"))
confint(co)
(ls <- lsmeans(m, ~ glue | wood))
(co <- contrast(ls, "trt.vs.ctrlk"))
confint(co)
ggplot(lsmeans::fiber, aes(diameter, strength, color=machine, shape=machine)) +
geom_point() +
theme_bw()
(ls <- lsmeans(m, ~ glue | wood))
(co <- contrast(ls, "trt.vs.ctrlk"))
confint(co)
View(ex1321)
m <- lm(Gain ~ Class + Treatment, data = ex1321)
ggplot(ex1321, aes(Class, Treatment, color=Treatment, shape=Treatment)) +
geom_point() +
theme_bw()
(ls <- lsmeans(m, ~ glue))
(ls <- lsmeans(m, ~ Treatment))
(co <- contrast(ls, "pairwise"))
confint(co)
ggplot(Sleuth3::ex1321, aes(Class, Gain, color=Treatment, shape = Treatment)) +
geom_jitter() +
theme_bw()
ggplot(Sleuth3::ex1321, aes(Class, Gain, color=Treatment, shape = Treatment)) +
#geom_jitter() +
theme_bw()
ggplot(Sleuth3::ex1321, aes(Class, Gain, color=Treatment, shape = Treatment)) +
#geom_jitter() +
theme_bw() +
geom_point()
ggplot(Sleuth3::ex1321, aes(Class, Gain, color=Treatment, shape = Treatment)) +
geom_jitter() +
theme_bw()
(ls <- lsmeans(m, ~ Treatment))
(co <- contrast(ls, "pairwise"))
confint(co)
m <- lm(Gain ~ Class * Treatment, data = ex1321)
(ls <- lsmeans(m, ~ Treatment))
(co <- contrast(ls, "pairwise"))
ggplot(lsmeans::fiber, aes(diameter, strength, color=machine, shape=machine)) +
geom_point() +
theme_bw()
m <- lm(strength ~ diameter*machine, data=fiber)
ls <- lsmeans(m, ~ machine)
co <- contrast(ls, method = "pairwise")
confint(co)
ls <- lsmeans(m, ~ machine | diameter)
co <- contrast(ls, method = "pairwise")
confint(co)
mean(fiber$diameter)
( lst <- lstrends(m, "machine", var = "diameter") )
(co <- contrast(lst, method = "pairwise"))
confint(co)
m <- lm(Lifetime ~ Diet, data = Sleuth3::case0501)
ls <- lsmeans(m, "Diet")
co <- contrast(ls, list(`High - Low`    = c(    4,   -1,   -1,  0,   -1,   -1) /4,
`Pre-wean: R-N` = c(    0,    0,   -1,  0,    1,    0) ))
confint(co)
ls
ls
View(case1002)
library(IRanges)
library(GenomicRanges)
library(BiocInstaller)
library(BiocInstaller)
biocLite("GenomicFeatures")
biocLite("TxDb.Mmusculus.UCSC.mm10.ensGene")
library(TxDb.Mmusculus.UCSC.mm10.ensGene)
biocLite("rtracklayer")
library(rtracklayer)
biocLite("rtracklayer")
library(rtracklayer)
dbsnp137 <- import("mm10_snp137_chr1_trunc.bed.gz")
dbsnp137 <- import("mm10_snp137_chr1_trunc.bed.gz")
library(rtracklayer)
library(rtracklayer)
dbsnp137 <- import("mm10_snp137_chr1_trunc.bed.gz")
setwd("~/Iowa_State_University/Classes/EEOB_546X/BCB546X-Spring2017_Valerin_final_project/BCB546X-Spring2017_Valerin_final_project/Expression_Analysis")
#read in the gene counts from paper
counts_data<-read.delim("Asparagus.RSEM_genecounts.txt", check.names=FALSE, stringsAsFactors = FALSE)
cd<-DGEList(counts=counts_data)
library(edgeR)
cd<-DGEList(counts=counts_data)
keep <- rowSums(cpm(cd)>1) >= 3 #filters out lowly expressed genes
cd <- cd[keep, , keep.lib.sizes=FALSE]
cd<-calcNormFactors(cd) #normalizes using TMM
colors <- c("black","black","black","darkgreen","darkgreen","darkgreen","blue","blue","blue", "red", "red") #colors for the lines
#MDS plot without legend, but the names indicate line and sex
plotMDS(cd, col=colors, top = 250, gene.selection = "pairwise", main="MDS plot of various lines and sex of Asparagus officinalis")
#design matrix of sex and line
rm(design)
line<-factor(c(88,88,88,89,89,89,103,103,103,9,9))
sex<-factor(c("XX","XY","YY","XX","XY","YY","XX","XY","YY","XX","XY"))
#sex<-factor(c("female", "male","supermale","female", "male","supermale","female", "male","supermale","female", "male"))
data.frame(Sample=colnames(cd),line,sex)
design <- model.matrix(~line+sex)
rownames(design) <- colnames(cd)
design
cd <- estimateGLMCommonDisp(cd, design) #estimates common dispersion
cd <- estimateGLMTrendedDisp(cd, design)#estimates trended dispersion
cd <- estimateGLMTagwiseDisp(cd, design)#estimates tagwise dispersion
fit <- glmFit(cd, design)
lrt_FSupM <- glmLRT(fit, coef=6)  #Female VS Supermale
summary(de_FemvsSupMal <- decideTestsDGE(lrt_FSupM, adjust.method="fdr"))
FDR_FSupM <- p.adjust(lrt_FSupM$table$PValue, method="fdr")
sum(FDR_FSupM < 0.05) #408  differentially expressed genes (462 if not normalized)
status<-rep("not significant",length(FDR_FSupM))
status[FDR_FSupM<0.05 & lrt_FSupM$table$logFC>0]<-"up"
status[FDR_FSupM<0.05 & lrt_FSupM$table$logFC<0]<-"down"
plotMD(lrt_FSupM, main="SuperMale VS Female",hl.col=c("red","blue"),status = status, bg.col="grey")
lrt_FM <- glmLRT(fit, coef=5) #female VS male
#lrt_FM <- glmLRT(fit, contrast=c(-1,0,0,0,1,0))
summary(de_FemvsMal <- decideTestsDGE(lrt_FM, adjust.method="fdr"))
FDR_FMale<-p.adjust(lrt_FM$table$PValue,method="fdr") #adjust Pvalue
sum(FDR_FMale<0.05) #221 significant differentially expressed genes
status<-rep("not significant",length(FDR_FMale))
status[FDR_FMale<0.05 & lrt_FM$table$logFC>0]<-"up"
status[FDR_FMale<0.05 & lrt_FM$table$logFC<0]<-"down"
plotMD(lrt_FM, main="Male VS Female",hl.col=c("red","blue"),status = status, bg.col="grey")
lrt_MSupM <- glmLRT(fit, contrast=c(0,0,0,0,-1,1)) #Male VS Supermale
summary(de_MalvsSupMal <- decideTestsDGE(lrt_MSupM, adjust.method="fdr"))
FDR_MSupMale<-p.adjust(lrt_MSupM$table$PValue,method="fdr")
sum(FDR_MSupMale<0.05) #27
status<-rep("not significant",length(FDR_MSupMale))
status[FDR_MSupMale<0.05 & lrt_MSupM$table$logFC>0]<-"up"
status[FDR_MSupMale<0.05 & lrt_MSupM$table$logFC<0]<-"down"
plotMD(lrt_MSupM, main="Supermale VS Male",hl.col=c("red","blue"),status = status, bg.col="grey")
##Get the names of all of the genes that have a Pvalue<0.05 for FDR_FSupM
total_FDR_FSupM<-length(FDR_FSupM)
total_FDR_FSupM
names_of_FSupM_hit<-c()
counter<-0
for (i in 1:total_FDR_FSupM){
if (FDR_FSupM[i]<0.05 ){
counter<-counter+1
names_of_FSupM_hit[counter]=rownames(lrt_FSupM)[i]
}
}
names_of_FSupM_hit
num_FSupM_hit<-length(names_of_FSupM_hit)
num_FSupM_hit #408
##Get the names of all of the genes that have a Pvalue<0.05 for FDR_FMale
total_FDR_FMale<-length(FDR_FMale)
total_FDR_FMale
names_of_FMale_hit<-c() #empty vector
counter<-0
for (i in 1:total_FDR_FMale){
if (FDR_FMale[i]<0.05 ){
counter<-counter+1
names_of_FMale_hit[counter]=rownames(lrt_FM)[i] #adds the gene_id to empty vector if significantly differently expressed
}
}
names_of_FMale_hit
num_FMale_hit<-length(names_of_FMale_hit)
num_FMale_hit #221 DF genes in Female/Male pairwise comparison
##Get the names of all of the genes that have a Pvalue<0.05 for FDR_FMale
total_FDR_MSupMale<-length(FDR_MSupMale)
total_FDR_MSupMale
names_of_MSupMale_hit<-c()
counter<-0
for (i in 1:total_FDR_MSupMale){
if (FDR_MSupMale[i]<0.05 ){
counter<-counter+1
names_of_MSupMale_hit[counter]=rownames(lrt_MSupM)[i]
}
}
names_of_MSupMale_hit
num_MSupMale_hit<-length(names_of_MSupMale_hit)
num_MSupMale_hit #27
###Checks the number of hits between FSupM and MSupMale
FSupM_MSupM<-names_of_FSupM_hit %in% names_of_MSupMale_hit #compares the two vectors of gene names
sum(FSupM_MSupM) #23 common DF genes shared
num_FSupM_MSupM<-sum(FSupM_MSupM) #makes variable for venn diagram
FMale_FSupM<-names_of_FMale_hit %in% names_of_FSupM_hit
sum(FMale_FSupM)#150 differential genes shared between Female/Male and Female/Supermale
num_FMale_FSupM<-sum(FMale_FSupM) #makes variable for venn diagram
FMale_MSupMale<-names_of_FMale_hit %in% names_of_MSupMale_hit
sum(FMale_MSupMale)#2 DF genes
num_FMale_MSupMale<-sum(FMale_MSupMale) #makes variable for venn diagram
FSupM_MSupM_FMale<-names_of_FMale_hit %in% names_of_FSupM_hit %in% names_of_MSupMale_hit
sum(FSupM_MSupM_FMale)
num_FSupM_MSupM_FMale<-sum(FSupM_MSupM_FMale) #0 DF genes shared between all three groups
###Venn Diagram###
install.packages('VennDiagram')
library(VennDiagram)
grid.newpage()
draw.triple.venn(area1 = num_FMale_hit, area2 = num_FSupM_hit,
area3 = num_MSupMale_hit, n12 = num_FMale_FSupM,
n23 = num_FSupM_MSupM, n13 = num_FMale_MSupMale,
n123 = num_FSupM_MSupM_FMale,
category = c("Male vs Female", "Supermale vs female",
"Supermale vs male"),lty = "blank",
fill = c("skyblue", "pink1", "mediumorchid"),
cex = 1, cat.cex = 1.5,
cat.just=list(c(-0.2,4) , c(1,4) , c(0.5,-4)))
#dimensions courtesy of Kat
#getting genenames for the DE genes in Female vs supermale comparison
detags_FSupM <- rownames(cd)[as.logical(de_FemvsSupMal)]
#female vs male
detags_FM <- rownames(cd)[as.logical(de_FemvsMal)]
#male vs supermale
detags_MSupM <- rownames(cd)[as.logical(de_MalvsSupMal)]
#Getting numbers for each section of the Venn diagram
FM <- length(detags_FM)
FSupM <- length(detags_FSupM)
MSupM <- length(detags_MSupM)
FM_FSupM <- sum(detags_FM %in% detags_FSupM)
FM_MSupM <- sum(detags_FM %in% detags_MSupM)
FSupM_MSupM <- sum(detags_FSupM %in% detags_MSupM)
FM_FSupM_MSupM <- sum(detags_FM %in% detags_FSupM %in% detags_MSupM)
#generating Venn diagram
#install.packages('VennDiagram')
library(VennDiagram)
grid.newpage()
draw.triple.venn(area1 = FM, area2 = FSupM, area3 = MSupM,
n12 = FM_FSupM, n23 = FSupM_MSupM, n13 = FM_MSupM,
n123 = FM_FSupM_MSupM,
category = c("Male vs Female", "Supermale vs female", "Supermale vs male"),
lty = "blank",
fill = c("skyblue", "pink1", "mediumorchid"),
cex = 2, cat.cex = 2,
cat.just=list(c(-0.2,4) , c(1,4) , c(0.5,-4)))
R.version()
version
